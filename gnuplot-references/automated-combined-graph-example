###---------------------------------------------------------------------------------------------------------------
#single combined graph for multiple sets of data aggregated over time using the following commands on each host:
#processcount=`ps aux --no-heading | wc -l`
#echo "$(date '+%m/%d/%Y %H:%M') $processcount" >> host."$(hostname)"

#data format in each file:
#day/month/year hour:minute processcount
#01/25/2008 06:05 222
###---------------------------------------------------------------------------------------------------------------

#Bash Script to Generate line graph:

#!/bin/bash
FILENAMEPREFIX="host*"
OUTPUTFILE="output4.jpg"


TOTALFILECOUNT=`ls $FILENAMEPREFIX | wc -l`
SECONDTOLASTFILE=`expr $TOTALFILECOUNT - 1`
MIDDLEFILES=`ls $FILENAMEPREFIX  | sed '1d;$d' `
LASTFILE=`ls $FILENAMEPREFIX  | sed -n "${TOTALFILECOUNT}"p`
FIRSTFILE=`ls $FILENAMEPREFIX  | sed -n 1p`
LOOPCOUNT=0; 
echo "#!/usr/bin/gnuplot" > gnuplot.in
echo "reset" >> gnuplot.in
echo "set terminal jpeg" >> gnuplot.in
echo "set xdata time" >> gnuplot.in
echo "set timefmt \"%m/%d/%Y %H:%M\" " >> gnuplot.in
echo "set format x \"%H:%M\"" >> gnuplot.in
echo "set xtics border in scale 1,0.5 nomirror rotate by -45  autojustify" >> gnuplot.in
echo "set xtics norangelimit" >> gnuplot.in
echo "set xlabel \"Time\" " >> gnuplot.in
echo "set xrange [ * : * ] noreverse writeback" >> gnuplot.in
echo "set x2range [ * : * ] noreverse writeback" >> gnuplot.in
echo "set ylabel \"Process Count\"" >> gnuplot.in
#echo "set yrange [0:500]" >> gnuplot.in
echo "set yrange [ * : * ] noreverse writeback" >> gnuplot.in
echo "set y2range [ * : * ] noreverse writeback" >> gnuplot.in
echo "set zrange [ * : * ] noreverse writeback" >> gnuplot.in
echo "set cbrange [ * : * ] noreverse writeback" >> gnuplot.in
echo "set rrange [ * : * ] noreverse writeback" >> gnuplot.in
echo "set title \"24 Count\" " >> gnuplot.in
echo "set key reverse Left outside" >> gnuplot.in
echo "set grid" >> gnuplot.in
echo "set style data linespoints" >> gnuplot.in
echo "plot \"${FIRSTFILE}\" using 1:3 title \"${FIRSTFILE}\" lw 2, \\" >> gnuplot.in
((LOOPCOUNT++))

for DATAFILE in $MIDDLEFILES; do
    ((LOOPCOUNT++))
    echo "\"${DATAFILE}\" using 1:3 title \"${DATAFILE}\" lw 2, \\" >> gnuplot.in
done

echo "\"${LASTFILE}\" using 1:3 title \"${LASTFILE}\" lw 2" >> gnuplot.in
((LOOPCOUNT++))
echo "#" >> gnuplot.in                         
gnuplot gnuplot.in > $OUTPUTFILE
echo "${LOOPCOUNT} files graphed"
rm gnuplot.in
